48.8, 50.4, 37.8, 60.3, 46.5)
# y = sugar content of an adult's cereal
y <- c(20, 30.2, 2.2, 7.5, 4.4, 22.2, 16.6, 14.5, 21.4, 3.3, 6.6, 7.8, 10.6, 16.2,
14.5, 4.1, 15.8, 4.1, 2.4, 3.5, 8.5, 10, 1, 4.4, 1.3, 8.1, 4.7, 18.4)
l1<-length(x)
l2<-length(y)
m1<-mean(x)
m2<-mean(y)
s1<-sd(x)
s2<-sd(y)
qqnorm(x, main="Q-Q plot for data on children's cereals")
qqline(x)
t.test(x, y, alternative = "two.sided", conf.level = 0.95,
var.equal = FALSE)
bp <- read.table("bp.txt", header = T, sep = "\t")
bp <- read.table("/Users/dijin/Desktop/统计/bp.txt", header = T, sep = "\t")
View(bp)
boxplot(bp)
par(mfrow = c(1, 2))
hist(bp[,1])
qqnorm(bp[,1])
qqline(bp[,1])
hist(bp[,2])
qqnorm(bp[,2])
qqline(bp[,2])
diff <- bp[,1] - bp[,2]
boxplot(diff)
hist(diff)
qqnorm(diff)
qqline(diff)
t.test(diff, alternative = "two.sided")
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VOLTAGE.csv",header = T,sep=",")
remote<-data[which(data[,1] == 0),2]  #get remote
local<-data[which(data[,1] == 1),2]  #get local
boxplot(remote,local,names=c("remote","local"),range=1.5) #generate sidebyside boxplot
t.test(remote,local, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VOLTAGE.csv",header = T,sep=",")
remote<-data[which(data[,1] == 0),2]  #get remote
local<-data[which(data[,1] == 1),2]  #get local
boxplot(remote,local,names=c("remote","local"),range=1.5) #generate sidebyside boxplot
t.test(remote,local, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
#plot temperature with theoretical
plot(data[,1]~data[,2],xlab='theoretical',ylab='temp') #plot the temp against theoretical
lm(data[,1]~data[,2])   #fitting linear model
abline(lm(data[,1]~data[,2])) #draw relate line
#plot temperature with experiment
plot(data[,1]~data[,3],xlab='experiment',ylab='temp') #plot the data temp against experiment
lm(data[,1]~data[,3])   #fitting linear model
abline(lm(data[,1]~data[,3])) #draw relate line
t.test(theoretical,experiment, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
theoretical<-data[,2]  #get remote
experiment<-data[,3]  #get local
t.test(theoretical,experiment, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
boxplot(theoretical,experiment,names=c("theoretical","experiment"),range=1.5) #generate sidebyside boxplot
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- cor(x[indices,2],x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i")
co
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VOLTAGE.csv",header = T,sep=",")
remote<-data[which(data[,1] == 0),2]  #get remote
local<-data[which(data[,1] == 1),2]  #get local
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
data
remote
data<-cbind(remote,local)
data
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
t.test(remote,local, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VOLTAGE.csv",header = T,sep=",")
remote<-data[which(data[,1] == 0),2]  #get remote
local<-data[which(data[,1] == 1),2]  #get local
data<-cbind(remote,local)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
View(data)
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,sim = "ordinary", stype = "i") #use boot to calculate correlation separately
co
t.test(remote,local, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
# x = sugar content of a children's cereal
x <- c(40.3, 55, 45.7, 43.3, 50.3, 45.9, 53.5, 43, 44.2, 44, 47.4, 44, 33.6, 55.1,
48.8, 50.4, 37.8, 60.3, 46.5)
# y = sugar content of an adult's cereal
y <- c(20, 30.2, 2.2, 7.5, 4.4, 22.2, 16.6, 14.5, 21.4, 3.3, 6.6, 7.8, 10.6, 16.2,
14.5, 4.1, 15.8, 4.1, 2.4, 3.5, 8.5, 10, 1, 4.4, 1.3, 8.1, 4.7, 18.4)
boxplot(x, y)
npar.resample <- function(x){
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
median.boot.dist <- replicate(1000, npar.resample(remote))
median.boot.dist
hist(median.boot.dist)
plot(median.boot.dist)
qqlot(median.boot.dist)
qqnorm(median.boot.dist)
npar.resample <- function(x){
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
mean.boot.dist <- replicate(1000, npar.resample(remote))
qqnorm(mean.boot.dist)
mean.boot.dist <- replicate(1000, npar.resample(remote))
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
mean.boot.dist <- replicate(1000, npar.resample(local))
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
npar.resample <- function(x){
xstar <- sample(x, length(x), replace = T)
#median.star <- mean(xstar)
return(xstar)
}
mean.boot.dist <- replicate(1000, npar.resample(remote))
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
qqnorm(mean.boot.dist)
npar.resample <- function(x){
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
mean.boot.dist <- replicate(1000, npar.resample(remote))
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
npar.resample <- function(x){  # resample and record mean
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
mean.boot.dist <- replicate(1000, npar.resample(remote)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
mean.boot.dist <- replicate(1000, npar.resample(local)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VOLTAGE.csv",header = T,sep=",")
View(data)
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
View(data)
plot(data[,2]~data[,3],xlab='theoretical',ylab='temp') #plot the temp against theoretical
lm(data[,1]~data[,2])   #fitting linear model
plot(data[,2]~data[,3],xlab='theoretical',ylab='temp') #plot the temp against theoretical
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
plot(data[,2]~data[,3],xlab='theoretical',ylab='temp') #plot the temp against theoretical
lm(data[,2]~data[,3])   #fitting linear model
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- cor(x[indices,2],x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
plot(data[,2]~data[,3],xlab='theoretical',ylab='temp') #plot the temp against theoretical
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
View(data)
View(data)
plot(data[,2]~data[,3],xlab='theoretical',ylab='temp') #plot the theretical against experimental
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
plot(data[,2]~data[,3],xlab='theoretical',ylab='experimental') #plot the theretical against experimental
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
boxplot(data[,2],data[,3],names=c("theoretical","experimental"),range=1.5) #generate sidebyside boxplot
t.test(theoretical,experiment, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
theoretical<-data[,2]
experiment<-data[,3]
theoretical<-data[,2]
experimental<-data[,3]
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
plot(data[,2]~data[,3],xlab='theoretical',ylab='experimental') #plot the theretical against experimental
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
theoretical<-data[,2]
experimental<-data[,3]
boxplot(theoretical,experiment,names=c("theoretical","experimental"),range=1.5) #generate sidebyside boxplot \
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- cor(x[indices,2],x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
plot(data[,2]~data[,3],xlab='theoretical',ylab='experimental') #plot the theretical against experimental
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
theoretical<-data[,2]
experimental<-data[,3]
boxplot(theoretical,experiment,names=c("theoretical","experimental"),range=1.5) #generate sidebyside boxplot \
mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = mean, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,2]-x[indices,3])# change the function to check correlation separately
return(result)
}
co<-boot(data = data, statistic = mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
co<-boot(data = data, statistic = mean, R = 100,sim = "ordinary", stype = "i") #use boot to separately
View(data)
data<-cbind(theoretical,experimental)
library(boot)
co<-boot(data = data, statistic = mean, R = 200,sim = "ordinary", stype = "i") #use boot to separately
View(data)
mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
library(boot)
co<-boot(data = data, statistic = mean, R = 200,sim = "ordinary", stype = "i") #use boot to separately
co<-boot(data = data, statistic = mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
library(boot)
co<-boot(data = data, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
library(boot)
theoretical<-data[,2]
experimental<-data[,3]
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
library(boot)
co<-boot(data = data, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
co
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = TRUE)
npar.resample <- function(x){  # resample and record mean
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
mean.boot.dist <- replicate(1000, npar.resample(theoretical)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
theoretical
experimental
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
t.test(remote,local, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE) #assume normal and get CI
x<-theoretical
y<-experimental
l1<-length(x)
l2<-length(y)
m1<-mean(x)
m2<-mean(y)
s1<-sd(x)
s2<-sd(y)
m1-m2+1.96*sqrt(s1*s1/l1+s2*s2/l2)
m1-m2-1.96*sqrt(s1*s1/l1+s2*s2/l2)
boxplot(x, y)
# get QQ plots
qqnorm(x, main="Q-Q plot for data on children's cereals")
qqline(x)
qqnorm(y, main="Q-Q plot for data on adults' cereals")
qqline(y)
t.test(x, y, alternative = "two.sided", conf.level = 0.95,
var.equal = FALSE)
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1])-mean(x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
library(boot)
co<-boot(data = data, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
co
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
library(boot)
co<-boot(data = data, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
co
t.test(theoretical,experimental, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
y<-experimentalx
l1<-length(x)
l2<-length(y)
m1<-mean(x)
m2<-mean(y)
s1<-sd(x)
s2<-sd(y)
m1-m2+1.96*sqrt(s1*s1/l1+s2*s2/l2)
m1-m2-1.96*sqrt(s1*s1/l1+s2*s2/l2)
t.test(remote,local, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE) #assume normal and get CI
theoretical<-data[,2]
experimental<-data[,3]
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
theoretical<-data[,2]
experimental<-data[,3]
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
data<-cbind(theoretical,experimental)
View(data)
library(boot)
co<-boot(data = data, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
co
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
View(data)
diff <- data[,2] - bp[,3]
diff <- data[,2] - data[,3]
t.test(diff, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
i
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1])-mean(x[indices,2])# change the function to check correlation separately
return(result)
}
two<-cbind(theoretical,experimental)  #make new array
library(boot)
co<-boot(data = two, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
#verify come from normal distribution
npar.resample <- function(x){  # resample and record mean
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
mean.boot.dist <- replicate(1000, npar.resample(theoretical)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
mean.boot.dist <- replicate(1000, npar.resample(remote)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VOLTAGE.csv",header = T,sep=",")
remote<-data[which(data[,1] == 0),2]  #get remote
local<-data[which(data[,1] == 1),2]  #get local
mean.boot.dist <- replicate(1000, npar.resample(remote)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
#plot
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
plot(data[,2]~data[,3],xlab='theoretical',ylab='experimental') #plot the theretical against experimental
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
theoretical<-data[,2]
experimental<-data[,3]
boxplot(theoretical,experiment,names=c("theoretical","experimental"),range=1.5) #generate sidebyside boxplot \
#correlation
correlation <- function(x, indices) {  #define correlation to be the interest data
result <- cor(x[indices,2],x[indices,3])# change the function to check correlation separately
return(result)
}
library(boot)
co<-boot(data = data, statistic = correlation, R = 999,
sim = "ordinary", stype = "i") #use boot to calculate correlation separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
# t test
diff <- data[,2] - data[,3]
t.test(diff, alternative = "two.sided", conf.level = 0.95, var.equal = FALSE)
#verify data come from normal distribution
npar.resample <- function(x){  # resample and record mean
xstar <- sample(x, length(x), replace = T)
median.star <- mean(xstar)
return(median.star)
}
mean.boot.dist <- replicate(1000, npar.resample(theoretical)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
hist(mean.boot.dist)
mean.boot.dist <- replicate(1000, npar.resample(experimental)) # see distribution of resample
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
(mean.boot.dist)
hist(mean.boot.dist)
qqnorm(mean.boot.dist)
#111111111111111111
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/gpa.csv",header = T,sep=",")
head(data)
plot(data[,1]~data[,2],xlab='act',ylab='gpa') #plot the data gpa against act
help(abline)
help(lm)
lm(data[,1]~data[,2])   #fitting linear model
abline(lm(data[,1]~data[,2])) #draw relate line
lm(data[,1]~data[,2])   #fitting linear model
data[,1]
data
#plot
data<-read.table("/Users/dijin/Desktop/统计/minipro/4/VAPOR.csv",header = T,sep=",")
plot(data[,2]~data[,3],xlab='theoretical',ylab='experimental') #plot the theretical against experimental
lm(data[,2]~data[,3])   #fitting linear model
abline(lm(data[,2]~data[,3])) #draw relate line
#boot
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1])-mean(x[indices,2])# change the function to check correlation separately
return(result)
}
two<-cbind(theoretical,experimental)  #make new array
theoretical<-data[,2]
experimental<-data[,3]
#boot
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1])-mean(x[indices,2])# change the function to check correlation separately
return(result)
}
two<-cbind(theoretical,experimental)  #make new array
library(boot)
co<-boot(data = two, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
#boot
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
two<-cbind(theoretical,experimental)  #make new array
library(boot)
co<-boot(data = two, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
my.mean <- function(x, indices) {  #define correlation to be the interest data
result <- mean(x[indices,1]-x[indices,2])# change the function to check correlation separately
return(result)
}
two<-cbind(theoretical,experimental)  #make new array
library(boot)
co<-boot(data = two, statistic = my.mean, R = 999,sim = "ordinary", stype = "i") #use boot to separately
boot.ci(boot.out=co,conf=0.95) #cal the confidence interval
